body {
    margin: 0 auto;
    padding: 0 1em 0 1em;
    color: rgb(255, 255, 255);
    font-family: system-ui;
    /* Good for responsive. Adjusts dynamically rather than resize font manually per screen type which can gets messy - https://clamp.font-size.app/ */
    font-size: clamp(0.625rem, -0.0112rem + 3.3929vw, 2rem);
    background: linear-gradient(rgba(0, 0, 0, 0.70), rgba(0, 0, 0, 0.70)), url("/assets/bg/xwing.png") no-repeat center center / cover fixed;
    background-attachment: fixed;
    max-width: 1420px;
}


/*
html {
    cursor: url("assets/cursor/cursor.cur"), pointer;
}
*/

/* 1vw is 1% of viewport width. For example, 8vw of 1000px is 80px. */

a {
    text-decoration: none;
    color: rgb(255, 255, 255);
}

header {
    white-space: nowrap;
}


header img {
    height: 1em;
}

.job-title {
    margin-top: -1.5em;
}

.header-links {
    margin-top: -.8em;
}

#project {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    justify-items: space-between;
}

/* 1vw is 1% of viewport width. For example, 20vw of 1420px max-width (body) is 284px. */
/* Max-width on child container is enforced, I can't seem to figure out why .project-card stretches past 1420px without */
.project-card {
    display: grid;
    grid-template-columns: 1fr;
    max-width: 420px;
    height: 330px;
    width: 100%;
}

.project-card:hover {
    box-shadow: 0px 0px 20px rgb(255, 0, 0);
}

.project-card .front-card,
.project-card .back-card {
    /* Overlay back-card with front-card */
    grid-column: 1 / -1;
    grid-row: 1 / 1;
}

.project-card .front-card {
    /* Bring front-card to front using cartesian system (x, y, z) */
    box-shadow: 0px 0px 10px rgb(104, 248, 76);
    z-index: 1;
}

.project-card .back-card {
    /* Back of card content are flipped horiozntally, opactiy is set at 0% so it's not visible to user until the card rotates, scaling up opacity to 100% */
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    transform: rotateY(180deg);
    padding: 0 1em 0 1em;
    font-size: 16px;
    font-weight: 700;
    transform: rotateY(180deg);

    box-shadow: 0px 0px 10px rgb(104, 248, 76);
    max-height: 330px;
    overflow: hidden;
    opacity: 0%;
}

.project-card .back-card a {
    font-size: large;
    color: rgb(57, 185, 32);
    text-decoration: underline;
}

.project-card .front-card .project-name {
    margin-top: -.5em;
    font-size: .8em;
    text-align: center;
    padding: 1em 0 0 0;
}

.project-card .front-card .project-img img {
    max-width: 100%;
}

.project-card .back-card p:nth-child(2) {
    justify-self: end;
}

.project-card .back-card p:nth-child(3) {
    overflow: hidden;
    grid-column: 1 / -1;
}

.project-card .back-card p:nth-child(4) {
    align-self: end;
    justify-self: end;
    grid-column: 1 / -1;
}

/* Flips parent card (this will rotates front and back cards at the same time). Targets front card when parent card is flipped, hides front card and makes back card visible
PURE CSS CARD FLIP EFFECT
.project-card:hover {
    animation: cardRotate 1s normal 0s forwards;
}

.project-card:hover .front-card {
    animation: hideCard 1s forwards;
}

.project-card:hover .back-card {
    animation: showCard 1s forwards;
}
*/

/* I have elected to use JavaScript for Card Flip Effect, "flipProjectCard()" in "portfolio.js" file add or remove classes below on user's click */
/* In my opinion, it's better user clicks card to flip instead of hover, this way multiple cards can be flipped if user want to */
.project-card-flip {
    animation: cardRotate 1s normal 0s forwards;
}

.project-front-card-hide {
    animation: hideCard 1s forwards;
}

.project-back-card-show {
    animation: showCard 1s forwards;
}

/*******************************************************/

/****************************************/
/*      CSS ANIMATIONS/KEYFRAMES        */
/****************************************/
@keyframes projectCardShadow {
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/card-shadow */

}

@keyframes cardRotate {
    to {
        transform: rotateY(180deg);
    }
}

@keyframes hideCard {
    to {
        opacity: 0%;
        display: none; /* Set display: none; so users can interact with text actions or links on back of card */
    }
}


@keyframes showCard {
    to {
        opacity: 100%;
        background: rgba(0, 0, 0, 0.418);
    }
}

/********************************************/
/* MEDIA QUERIES for Mobile, Tablet Screens */
/********************************************/
@media screen and (max-width: 1420px) {}